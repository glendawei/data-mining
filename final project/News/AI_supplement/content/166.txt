GitHub teases Copilot enterprise plan that lets companies customize for their codebase GitHub today announced plans for an enterprise subscription tier that will allow companies to fine-tune its Copilot pair-programmer based on their internal codebase. The news constituted part of a number of notable tidbits the Microsoft-owned company revealed at its annual GitHub Universe developer conference today, including a new partner program as well as providing a little more clarity on when Copilot Chat will officially be available. GitHub unveiled Copilot Chat back in March, before rolling it out in public beta for business users in July, followed by availability for individual users in September — next month (December) sees Copilot Chat launch into general availability, though GitHub stopped short of revealing a precise date. In a nutshell, Copilot Chat is a chatbot that sits inside the developer’s integrated development environment (IDE), allowing them to ask questions about the code they’re currently working on, including getting it to identify and propose fixes to bugs in a particular program, and even provide inline feedback about specific lines of code. GitHub Copilot Chat. Image Credits: GitHub GitHub Copilot Chat. Image Credits: GitHub Copilot Chat is powered by the latest OpenAI large language model (LLM) GPT-4, and is available as part of the standard Copilot subscription, which is $10/month for individuals and $19/month for businesses. However, GitHub also revealed that it will be rolling out a new enterprise-grade Copilot subscription costing $39/month. Available from February, 2024, Copilot Enterprise will feature everything in the existing business plan plus a few notable extras — this includes the ability for companies to personalize Copilot Chat for their codebase and fine-tune the underlying models. The idea here is that a company would connect Copilot to their codebase, with developers able to receive suggestions on all their internal, private code. This actually runs tangentially to another announcement today, vis-à-vis Copilot Chat will be extending beyond the code editor and IDE to GitHub.com for those that subscribe to Copilot Enterprise. This will allow developers to delve deep into their code, documentation and pull requests with Copilot Chat serving up summaries, suggestions and answers to a broader gamut of questions. “With Copilot Chat connected to your repositories on GitHub.com, Copilot Enterprise allows your teams of developers to quickly get up to speed on your codebase, search through and build documentation, get suggestions based on internal and private code, and quickly review pull requests,” GitHub CEO Thomas Dohmke said in a blog accompanying today’s news from GitHub Universe. “By placing the collective knowledge of your organization’s codebase at their fingertips, your developers will not only write code faster, but deploy your next application, feature, or update ahead of the curve of your competition.” Copilot Enterprise: Generate a pull request summary via “smart actions.” Image Credits: GitHub Copilot Enterprise: Generate a pull request summary via “smart actions.” Image Credits: GitHub As things stand, Copilot Chat does work with private workspaces within the IDE, however, it requires the user to clone their repository locally. What Copilot Enterprise does is open things up to all manner of AI-enabled conversations around code and associated documentation in the cloud. But more than that, companies can fine-tune the model so that Copilot is better enabled to complete code and answer very specific questions that are unique to a given codebase. “Our ultimate goal is to deliver a Copilot that is conversational, ubiquitous, personalized, and trustworthy, and that’s exactly what we’re doing with Copilot Enterprise,” Mario Rodriguez, VP of product management at GitHub, told TechCrunch. Custom-model creation in GitHub Copilot Enterprise. Image Credits: GitHub Custom-model creation in GitHub Copilot Enterprise. Image Credits: GitHub One company that GitHub worked with during the initial testing of this feature was chip giant AMD, which said that fine-tuning the Copilot model enabled support for hardware design languages such as Verilog, something that would not have been possible with the standard Copilot incarnation. “Bringing AI capabilities to a large population of AMD hardware engineers, the customized Copilot model provided accurate, high-quality AI suggestions tuned to our specific style of product design,” AMD’s senior director of software development Alexander Androncik said in a statement. In related news, GitHub revealed that it’s bringing Copilot Chat to the GitHub mobile app “in the coming months,” while it’s adding support for JetBrain’s suite of IDEs, having hitherto been restricted to VS Code and Visual Studio code editors. This move is seemingly down to popular demand — “you asked, and we heard you loud and clear,” Dohmke said. Another notable announcement emanating from GitHub Universe today is the Copilot Partner Program, which will see GitHub foster relationships with the broader developer community. This will come in the form of plug-ins built by third-party developer tooling companies, such as Datastax, LaunchDarkly, Postman, HashiCorp and Datadog, which are building integrations for Copilot. “As this ecosystem continues to expand, so will the possibilities and use cases of what GitHub Copilot can accomplish for developers,” Dohmke said. “From helping to improve the performance of database queries, to checking the status of a feature flag, or to viewing the results of an A/B test — all of this and more will soon be possible thanks to the partners who are building plugins for GitHub Copilot.” An initial roster of 25 partner companies are being announced today, though GitHub is opening an early-access program for companies looking to get involved. GitHub Copilot Partner program: Datastax example. Image Credits: GitHub GitHub Copilot Partner program: Datastax example. Image Credits: GitHub Finally, as it relates to Copilot at least, GitHub also gave an early look at what the company is calling Copilot Workspace, which it says serves as a “natural language bridge” for developers to go from idea to running code in just a few minutes. When a developer opens an issue in a Copilot Workspace, they’re served with an auto-generated plan on how to go about actioning the change — though the developer is able to edit this plan and “steer” the AI in a more suitable direction if needed. This is expected to land some time in 2024. “Copilot Workspace is like a pair programming session with a partner that knows about every inch of the project, and can follow your lead to make repository-wide changes from the issue to the pull request with the power of AI,” Dohmke said. Copilot Workspace. Image Credits: GitHub Copilot Workspace. Image Credits: GitHub On the security front, GitHub is also building on some features it launched back in 2020 when it introduced its first built-in IDE. This includes secret-scanning and code-scanning, which has allowed GitHub users to access automated vulnerability detection smarts and also find any secrets — such as passwords — inadvertently left in public code. Now, GitHub is adding new AI to the mix, including an “autofix” feature for code-scanning designed to help developers introduce fixes more quickly. These AI-generated fixes apply to CodeQL, JavaScript and TypeScript alerts received in pull requests. “These are not just any fixes, but precise, actionable suggestions that will allow you to quickly understand what the vulnerability is and how to remediate it,” GitHub VP of product management Asha Chakrabarty said in a blog post. Code-scanning autofix in GitHub Copilot. Image Credits: GitHub Code-scanning autofix in GitHub Copilot. Image Credits: GitHub Developers can elect to commit these fixes to their code with a click, or even make an edit to the fix before merging it into the codebase. “The beauty of this feature is that it provides a frictionless remediation experience, as users can rapidly fix vulnerabilities while they code, resulting in an even faster time to remediation — with all the same accuracy that code scanning users have come to expect,” Chakrabarty added. 