Amazon’s code-generating tool gets MongoDB-specific upgrades Between open source and cloud-hosted, more proprietary solutions, there’s an abundance of AI-powered code-generating tools to choose from. So how does one choose? That’s a nuanced question. Beyond stronger performance on particular sets of programming languages or logic problems, there’s not a lot to differentiate one code-generating tool from another. But Amazon’s looking to change that. Today, the company announced that its code-generating tool available through AWS, Amazon CodeWhisperer, has been “optimized” to provide “enhanced” suggestions for app development on MongoDB, the open source database management program. Now, CodeWhisperer can provide better MongoDB-related code recommendations that reflect best practices, Amazon says — enabling developers to prototype more quickly. “Regardless of what application a developer is building, they can now get generative AI-powered code suggestions that adhere to MongoDB best practices,” Deepak Singh, VP of next-gen developer experience at AWS, told TechCrunch via email. “Our joint customers in particular will now benefit from optimized suggestions across both AWS and MongoDB, further accelerating development when building highly scalable, cloud-based applications.” To improve CodeWhisperer’s suggestions pertaining to MongoDB, AWS says that it worked with the team maintaining the database — MongoDB the company — to train CodeWhisperer’s underlying AI model on “highly curated” content and code across C#, Go, Java, JavaScript and Python. The training data came from MongoDB documentation, use cases and common MongoDB tasks like data aggregations and operations), and the MongoDB team took active part in evaluating CodeWhisperer’s output during the training process. “Training AI-powered coding tools is an iterative process, and we’re excited about the results we’ve seen so far,” Andrew Davidson, SVP of product at MongoDB, told TechCrunch in an email interview. “We’ll continue working with the Amazon CodeWhisperer team to further optimize performance and accuracy to provide an even better experience for developers building applications with MongoDB Atlas on AWS.” Amazon and MongoDB have a long history together, having collaborated on the launch of MongoDB Atlas, a fully managed MongoDB service on AWS, around seven years ago. So the CodeWhisperer collaboration doesn’t come as a complete surprise. But I’m curious to see what sort of precedent it establishes in the commercial code generation space. For example, can we expect AWS to work with other vendors on codebased-specific optimizations to CodeWhisperer in the future? If so, will money be involved — and did money change hands between MongoDB and Amazon for this optimization, for that matter? AWS and MongoDB deny it. Then, there’s the potential legal ramifications to consider. Microsoft, GitHub and OpenAI are currently being sued in a class action motion that accuses them of violating copyright law by allowing Copilot, GitHub’s own code-generating tool, to regurgitate licensed code snippets without providing credit. Amazon, perhaps, is laying the groundwork to avoid the same fate. In any case, I wonder whether rivals like GitHub will form their own relationships with vendors to respond to Amazon’s CodeWhisperer improvements. Amazon clearly sees the MongoDB tie-in as a unique selling point — and complementary to its several other MongoDB products. I’d expect not anytime soon — if ever. Copilot, while reportedly a money loser, is in a position of strength user-base-wise, with well over a million paying individual customers and more than 37,000 enterprise clients. Then again, stranger things have happened in the generative AI space — lawsuit-driven, competition-spurred or otherwise. 