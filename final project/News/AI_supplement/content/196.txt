Factory wants to use AI to automate the software dev lifecycle Developer velocity, the speed at which an organization ships code, is often impacted by necessary but lengthy processes like code review, writing documentation and testing. Inefficiencies threaten to make theses processes even longer. According to one source, developers waste 17.3 hours per week due to technical debt and bad — i.e. nonfunctional — code. Theoretical physics PhD Matan Grinberg and Eno Reyes, previously a data scientist at Hugging Face and Microsoft, thought there had to be a better way. During a Hackathon in San Francisco, Grinberg and Reyes built a platform that could autonomously solve simple coding problems — a platform that they later came to believe had commercial potential. After the hackathon, the pair expanded the platform to handle more software development tasks and founded a company, Factory, to monetize what they’d built. “Factory’s mission is to bring autonomy to software engineering,” Grinberg told TechCrunch in an email interview. “More concretely, Factory helps large engineering organizations automate parts of their software development lifecycle via autonomous, AI-powered systems.” Factory’s systems — which Grinberg calls “Droids,” a term Lucasfilm might have a problem with — are built to juggle various repetitive, mundane but normally time-consuming software engineering tasks. For example, Factory has “Droids” for reviewing code, refactoring or restructuring code and even generating new code from prompts à la GitHub Copilot. Grinberg explains: “The review Droid leaves insightful code reviews and provides context for human reviewers on every change to the codebase. The documentation Droid generates and continually updates documentation as needed. The test Droid writes tests and maintains test coverage percentage as new code is merged. The knowledge Droid lives in your communication platform (e.g. Slack) and answers deeper questions about the engineering system. And the project Droid helps plan and design requirements based on customer support tickets and feature requests.” All of Factory’s Droids are built on what Grinberg refers to as the “Droid core”: an engine that ingests and processes a company’s engineering system data to build a knowledge base, and an algorithm that pulls insights from the knowledge base to solve various engineering problems. A third Droid core component, Reflection Engine, acts as a filter for the third-party AI models that Factory leverages, enabling the company to implement its own safeguards, security best practices and so on on top of those models. “The enterprise angle here is that this is a software suite that allows engineering organizations to output better product faster, while also improving engineering morale by lightening the load of tedious tasks like code review, docs and testing,” Grinberg said. “Additionally, due to the autonomous nature of the Droids, little is required by way of user education and onboarding.” Now, if Factory can consistently, reliably automate all those dev tasks, the platform would pay for itself indeed. According to a 2019 survey by Tidelift and The New Stack, developers spend 35% of their time managing code, including testing and responding to security issues — and less than a third of their time actually coding. But the question is, can it? Even the best AI models today aren’t above making catastrophic mistakes. And generative coding tools can introduce insecure code, with one Stanford study suggesting that software engineers who use code-generating AI are more likely to cause security vulnerabilities in the apps they develop. Grinberg was upfront about the fact that Factory didn’t have the capital to train all of its models in-house — and thus is at the mercy of third-party limitations. But, he asserts, the Factory platform is still delivering value while relying on third-party vendors for some AI muscle. “Our approach is building these AI systems and reasoning architectures, making use of cutting-edge … models and establishing relationships with customers to deliver value now,” Grinberg said. “As an early startup, it’s a losing battle to train [large] models. Compared to incumbents, you have no monetary advantage, no chip access advantage, no data advantage and (almost certainly) no technical advantage.” Factory’s long-term play is to train more of its own AI models to build an “end-to-end” engineering AI system — and to differentiate these models by soliciting engineering training data from its early customers, Grinberg said. “As time goes on, we’ll have more capital, the chip shortage will clear up and we’ll have direct access (with permission) to a treasure trove of data (i.e. the historical timeline of entire engineering organizations),” he continued. “We’ll build Droids to be robust, fully autonomous — with minimal required human interaction — and tailored to customers’ needs from day one.” Is that an overly optimistic view? Perhaps. The market for AI startups grows more competitive by the day. But to Grinberg’s credit, Factory’s already working with a core group of around 15 companies. Grinberg wouldn’t name names, save the clients — which have used Factory’s platform to author thousands of code reviews and hundreds of thousands of lines of code to date and range in size from “seed stage” to “public.” Factory recently closed a $5 million seed round co-led by Sequoia and Lux with participation from SV Angel, BoxGroup, DataBricks CEO Ali Ghodsi, Hugging Face co-founder Clem Delangue and others. Grinberg says that the new capital will be put toward expanding Factory’s six-person team and platform capabilities. “The major challenges in this AI code generation industry are trust and differentiation,” he said. “Every VP of engineering wants to improve their organization’s output with AI. What stands in the way of this is the unreliable nature of many AI tools, and the reticence of large, labyrinthine organizations to trust this new, futuristic sounding technology … Factory is building a world where software engineering itself is an accessible, scalable commodity.” 