OnLogic Announces Edge Compute Device Powered by Raspberry Pi and Ignition Edge Collecting and processing system data in powerful computers at the cutting edge of the shop floor is made simpler with advancements in integrated hardware and software from OnLogic and Ignition Edge. As control engineers look to the future to improve and optimize processes, two factors are clear. First, the volume of data required to make logical decisions will continue increasing at an accelerating pace. Second, the speed of processing and responding to optimization decisions will also continue increasing at a record-setting pace.  OnLogic recently announced the IGN800 automation device, centered around the popular Raspberry Pi modular computer. Like many other engineers, I have watched the advancement of this type of technology breaking out of the boundaries of the ‘hobby’ world and establishing a foothold within industrial settings and have wondered what benefits they provide and how they fit within the architecture of a modern control system. Before exploring the role of these gateway and edge devices in an industrial setting, let’s discuss a few technical specifications of the industrial Raspberry Pi device.    The IGN800 is a gateway device, meaning that it serves to receive signals from the control system (perhaps a PLC) in the form of standard discrete, register, and string tags, and then accomplish two tasks with that information. Some of the data requires an immediate response action, so that data is processed internally within the module and a reply submitted to the control system with a directive for action. Alternatively, some data is retained for the long haul to make comparisons spanning weeks, months, or more. This data is transmitted to an off-site server, like AWS or MS Azure. Because of this existence at the edge between the physical control system data and the off-site cloud storage, it is called an ‘Edge’ computer. These tasks require a specific set of device specs, more than we might expect from those that simply process data on the shop floor alone. The I/O in an edge gateway is addressed with communication ports to interact with the control devices, which are responsible for the field device interaction. The IGN800 includes 1x 1Gb Ethernet port with an optional power over Ethernet (PoE) module, as well as a header for RS-232, 422, and 485 networks. 3x USB ports are included, with an additional USB-C for PC connection. An HDMI port serves to interact with a visualization device for advanced SCADA applications. Inside the IGN800, data storage is essential, with a standard 64 GB solid state drive, optionally expandable up to 2 TB. With the Ignition Edge software, communication protocols such as MQTT allow interaction with cloud servers for the IIoT data storage and processing. Some applications may benefit from optional modules, including Wi-Fi, advanced security with TPM modules, and various mounting and AC power supply configurations.    Although hardware alone can show some obvious performance specifications, the discussion is meaningless without appropriate software support to accomplish the required tasks. Ignition Edge by Inductive Automation is a trusted choice for these edge computing tasks across many control platforms, including Siemens, Rockwell Automation, ABB, Emerson, Omron, and others. With such a robust lineup of hardware and communication software drivers, the various license options are fit to handle virtually any scenario.  In a common control environment, the PLC is the dedicated master of all field I/O devices. The purpose of a gateway is to serve alongside the process controller. This could mean it is physically located in the same cabinet as the controller, or far removed. In either case, the edge gateway is linked to the PLCs with a network protocol, usually Ethernet or RS-485. A second network connects the gateway to the main facility network through Ethernet or WiFi. The interconnection between the two networks highlights a few needs for the systems. First, the gateway must be able to translate tag-based Ethernet/RS-485 messages into a standard IP (internet protocol) packet, or convert them directly into a packet format that will communicate with a cloud server. This is often MQTT, the message queueing telemetry transport format. A successful IIoT gateway must have this ability. Second, but no less important, is security. Since this gateway inherently provides two-way communication between the outside world and the production floor, it is essential that all software platforms have extreme security measures designed to prevent unauthorized access. With an advanced operating system, security flaws can be corrected by dedicated development teams much faster than for most in-house IT support.  As data becomes easier to acquire, it is only reasonable that this data should be used to make systems faster, more efficient, and more productive. But this requires careful consideration of the hardware and software that will always create both strengths and weaknesses, just like every technology development since the beginning of time. 