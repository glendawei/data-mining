No-code Robotics: Programming Made Easy Many companies including Yaskawa, Fanuc, and Control Techniques provide operation and monitoring of industrial equipment through no-code technologies and improved graphical user interfaces. The development of no-code robotics challenges the need for complex programming and opens up automation for novices and nonspecialists. What is no-code programming and what are the benefits for companies that are innovating in this space?   The no-code movement involves the use of specialist software tools and frameworks for creating and using applications with little or no programming knowledge. In the context of robotics, no-code allows both non-coders and experienced coders to program robots to perform application-specific tasks or jobs, without the need to use code. The programming for communicating instructions to a computer is hidden behind the scenes while graphical representations can be used through visual modeling and drag-and-drop user interfaces to set up robot/cobot tasks. It is no secret to those who have visited recent industry events and trade shows—the emphasis on technology development is around the user experience for programming, allowing more inexperienced operators to achieve success in processes that used to be far more technical.  No-code robotics can make the reprogramming of bots (such as those used for welding, joining, and material handling) much faster and simpler for industrial workers. Plant or manufacturing facility managers can also use fewer robots/cobots in their operations because easy-to-implement reprogramming can set them up for other tasks. What can be considered the most attractive aspect of no-code robotics is the ability to onboard more workers with different experience levels. No-code development in robotics and other fields removes the complexity of programming and sets a level playing field for users to up-skill themselves. No-code serves to democratize the implementation of robotics in automation and is expected to revolutionize digital transformation for every industry.  Yaskawa Motoman demonstrated its new Smart Pendant solution at a variety of recent trade shows. One of the innovative technologies used in this pendant tracks the users’ orientation relative to the robot. Users can control robot movement by tapping on-screen buttons with labels indicating movements to the left and right, forward and away, and up and down. In addition, tilt controls allow the robot to be jogged simply by moving the teach pendant. The alternative method is to assume a fixed XYZ coordinate system at the base of the robot, and as the user moves around the robot, she or he must carefully remember which direction each axis motion will move. This simplification and changing perspective with respect to the programmer reduces setup time and makes the entire robot deployment experience much more user-friendly.   Nearly all collaborative robot companies, including Fanuc with its CRX series, offer tablet-based teach pendants with visual drag and drop functionality for faster application programming. Customers can use a manual guided teaching function to teach the cobot where to go. The cobot's position can be saved on the tablet with the drag and drop functionality.  From teach pendants to smartphone apps, graphical user interfaces are considered to be an accessible means of human-to-machine or human-to-device communication. Even better, the advancements in secure wireless technologies allow these visual apps and devices to interface with the equipment without the need for complex rewiring and connection to a network. In a recent news release, we explored Control Techniques’ Marshal app for commissioning and monitoring Commander S series variable frequency drives (VFDs). Near field communication allows customers to download and copy parameters between machines and monitor conditions of the VFD without a constant connection. Once again, the emphasis of technology advancement is to allow users with limited time and experience to enter the field to commission and repair the devices as quickly as possible.    No-code programming is simply a transition from technical interaction with every line of code running in the devices, migrating to a simplified process of considering how the process looks and feels from the perspective of the programmer. In many cases, advanced functions will still require code to be written, but if many of the challenges can be solved in a fraction of the time by creating more user-friendly environments, the trend will continue to attract those with an interest in evolving technology. 